# Docker Compose configuration for Temporal Workflow Engine
# This file sets up a complete Temporal development environment with:
# - PostgreSQL database for persistence
# - Temporal server with auto-setup for schema initialization
# - Temporal admin tools for CLI operations
# - Temporal UI for workflow visualization and management

services:
  # PostgreSQL database for Temporal persistence
  # Stores workflow execution history, task queues, namespace metadata, and visibility records
  postgresql:
    image: postgres
    environment:
      POSTGRES_PASSWORD: temporal  # Database password
      POSTGRES_USER: temporal      # Database username with create database permissions
    networks:
      - temporal-network
    ports:
      - "5432:5432"  # Expose PostgreSQL port for external connections
    volumes:
      - /var/lib/postgresql/data  # Persistent volume for database data
  
  # Temporal Server
  # Core service that manages workflow execution, history, and task dispatching
  temporal:
    image: temporalio/auto-setup:1.27.2  # Uses auto setup, will automatically populate the database (temporal and temporal_visibility)
    depends_on:
      - postgresql  # Ensures database is available before starting
    environment:
      - DB=postgres12                     # Type of DB, uses PostgreSQL version 12 or later
      - DB_PORT=5432                      # PostgreSQL port
      - POSTGRES_USER=temporal            # Database user, will need create db access
      - POSTGRES_PWD=temporal             # Database password
      - POSTGRES_SEEDS=postgresql         # PostgreSQL host (service name in this network)
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/config.yaml  # Path to dynamic config
      - TEMPORAL_ADDRESS=temporal:7233    # Address for internal Temporal services communication
      - TEMPORAL_CLI_ADDRESS=temporal:7233  # Address for CLI tools to connect
      - PROMETHEUS_ENDPOINT=0.0.0.0:8000  # Metrics endpoint for monitoring
    networks:
      - temporal-network
    ports:
      - "7233:7233"  # Frontend service port for client connections (gRPC)
      - "8000:8000"  # Prometheus metrics endpoint
    volumes:
      - ./temporal:/etc/temporal/config/dynamicconfig  # Mount dynamic configuration
  
  # Temporal Admin Tools
  # Provides CLI tools for managing Temporal (tctl and temporal CLI)
  # Used for namespace management, workflow operations, and debugging
  temporal-admin-tools:
    image: temporalio/admin-tools:1.27.2-tctl-1.18.2-cli-1.3.0  # Contains both legacy tctl and new temporal CLI
    depends_on:
      - temporal  # Ensures Temporal server is available
    environment:
      - TEMPORAL_ADDRESS=temporal:7233     # Address to connect to Temporal server
      - TEMPORAL_CLI_ADDRESS=temporal:7233  # Address for CLI tools
    networks:
      - temporal-network
    stdin_open: true  # Keep STDIN open for interactive CLI usage
    tty: true         # Allocate a pseudo-TTY for better CLI experience
  
  # Temporal Web UI
  # Web interface for monitoring and debugging workflows
  # Provides visualization of workflow execution, search, and management capabilities
  temporal-ui:
    image: temporalio/ui:2.34.0  # Web UI version
    container_name: temporal-ui
    depends_on:
      - temporal  # Ensures Temporal server is available
    environment:
      - TEMPORAL_ADDRESS=temporal:7233      # Address to connect to Temporal server
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000  # CORS settings for frontend development
    networks:
      - temporal-network
    ports:
      - "8080:8080"  # Web UI port, access via http://localhost:8080

# Network for all Temporal services to communicate
networks:
  temporal-network: